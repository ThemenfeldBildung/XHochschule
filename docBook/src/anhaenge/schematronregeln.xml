<?xml version="1.0" standalone="yes" ?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<appendix version="5" xml:id="spezifikation.anhang.schematronregeln" xml:lang="de" xmlns="http://docbook.org/ns/docbook">
    <info>
        <title>Schematronregeln</title>
    </info>
    <informaltable frame="all">
        <tgroup cols="4">
            <colspec colwidth="16mm"/>
            <colspec colwidth="26mm"/>
            <colspec colwidth="59mm"/>
            <colspec colwidth="59mm"/>
            <thead>
                <row>
                    <entry>ID</entry>
                    <entry>Eingeschränktes Element</entry>
                    <entry>Funktion</entry>
                    <entry>Fehlermeldung</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>XHS-0001</entry>
                    <entry>-studienabschnitt : angabenStudienabschnittRentenbescheinigung [1..*]</entry>
                    <entry>if (*:beurlaubungsstatus/code/code = 'http://xhochschule.de/def/xhochschule/1.0/code/beurlaubungsstatus/beurlaubt') then exists(*:beurlaubungsgrund) else empty(*:beurlaubungsgrund)</entry>
                    <entry>Der Beurlaubungsgrund kann nur angegeben werden, wenn der Beurlaubungsstatus 'beurlaubt' ist.</entry>
                </row>
                <row>
                    <entry>XHS-0010</entry>
                    <entry>lernzeitmodell</entry>
                    <entry>ends-with(*:code/code/text(),'/vollzeit') or ends-with(*:code/code/text(),'/teilzeit')</entry>
                    <entry>In der Immatrikulationsbescheinigung nach BaföG § 9 muss das Lernzeitmodell den Wert 'Teilzeit' oder 'Vollzeit' aufweisen.</entry>
                </row>
                <row>
                    <entry>XHS-0011</entry>
                    <entry>-benotung : angabenBenotung [1]</entry>
                    <entry>exists(*:gesamtnote/*:note)</entry>
                    <entry>Es muss eine Note angegeben werden, wenn der Status von 'benotung' nicht klar definiert ist.</entry>    
                </row>
                <row>
                    <entry>XHS-0012</entry>
                    <entry>leistungsart</entry>
                    <entry>(exists(*:nichtGelisteterWert) and ends-with(*:code/code/text(), 'wert_nicht_in_liste')) or (not(exists(*:nichtGelisteterWert)) and not(ends-with(*:code/code/text(), 'wert_nicht_in_liste')))</entry>
                    <entry>Das Freitextfeld (nichtGelisteterWert) darf nur dann angezeigt werden, wenn in der Codeliste der Status 'Wert_nicht_in_Liste' gewählt wurde.</entry>
                </row>
                <row>
                    <entry>XHS-0013</entry>
                    <entry>leistungsstatus</entry>
                    <entry>(exists(*:nichtGelisteterWert) and ends-with(*:code/code/text(), 'wert_nicht_in_liste')) or (not(exists(*:nichtGelisteterWert)) and not(ends-with(*:code/code/text(), 'wert_nicht_in_liste')))</entry>
                    <entry>Das Freitextfeld (nichtGelisteterWert) darf nur dann angezeigt werden, wenn in der Codeliste der Status 'Wert_nicht_in_Liste' gewählt wurde.</entry>
                </row>
                <row>
                    <entry>XHS-0014</entry>
                    <entry>lernzeitmodell</entry>
                    <entry>(exists(*:nichtGelisteterWert) and ends-with(*:code/code/text(), 'wert_nicht_in_liste')) or (not(exists(*:nichtGelisteterWert)) and not(ends-with(*:code/code/text(), 'wert_nicht_in_liste')))</entry>
                    <entry>Das Freitextfeld (nichtGelisteterWert) darf nur dann angezeigt werden, wenn in der Codeliste der Status 'Wert_nicht_in_Liste' gewählt wurde.</entry>    
                </row>
                <row>
                    <entry>XHS-0015</entry>
                    <entry>beurlaubungsstatus</entry>
                    <entry>(exists(*:nichtGelisteterWert) and ends-with(*:code/code/text(), 'wert_nicht_in_liste')) or (not(exists(*:nichtGelisteterWert)) and not(ends-with(*:code/code/text(), 'wert_nicht_in_liste')))</entry>
                    <entry>Das Freitextfeld (nichtGelisteterWert) darf nur dann angezeigt werden, wenn in der Codeliste der Status 'Wert_nicht_in_Liste' gewählt wurde.</entry>
                </row>
                <row>
                    <entry>XHS-0016</entry>
                    <entry>immatrikulationsstatus</entry>
                    <entry>(exists(*:nichtGelisteterWert) and ends-with(*:code/code/text(), 'wert_nicht_in_liste')) or (not(exists(*:nichtGelisteterWert)) and not(ends-with(*:code/code/text(), 'wert_nicht_in_liste')))</entry>
                    <entry>Das Freitextfeld (nichtGelisteterWert) darf nur dann angezeigt werden, wenn in der Codeliste der Status 'Wert_nicht_in_Liste' gewählt wurde.</entry>    
                </row>
                <row>
                    <entry>XHS-0017</entry>
                    <entry>lateinischeEhrenbezeichnung</entry>
                    <entry>(exists(*:nichtGelisteterWert) and ends-with(*:code/code/text(), 'wert_nicht_in_liste')) or (not(exists(*:nichtGelisteterWert)) and not(ends-with(*:code/code/text(), 'wert_nicht_in_liste')))</entry>
                    <entry>Das Freitextfeld (nichtGelisteterWert) darf nur dann angezeigt werden, wenn in der Codeliste der Status 'Wert_nicht_in_Liste' gewählt wurde.</entry>    
                </row>
                <row>
                    <entry>XHS-0018</entry>
                    <entry>-note : string [0..1]</entry>
                    <entry>(matches(., '^(6([,.]0)?|([1-5]([,.]\d+)))|[A-F][+-]?$'))</entry>
                    <entry>XHS-0018 Im Feld Note dürfen nur zwei Formate 1. 'Zahl-Komma-Zahl' Beispiel "2,6" oder 2. 'Buchstabe A-F (+/-)' Beispiel "A" oder "A+" angegeben werden.</entry>    
                </row>
                <row>
                    <entry>XHS-0019</entry>
                    <entry>-note : string [0..1]</entry>
                    <entry>(matches(., '^(6([,.]0)?|([1-5]([,.]\d+)))|[A-F][+-]?$'))</entry>
                    <entry>XHS-0019 Im Feld Note dürfen nur zwei Formate 1. 'Zahl-Komma-Zahl' Beispiel "2,6" oder 2. 'Buchstabe A-F (+/-)' Beispiel "A" oder "A+" angegeben werden.</entry>    
                </row>
                <row>
                    <entry>XHS-0020</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:leistungsart/leistungsartCode/code/text(), 'klausur') or  ends-with(*:leistungsart/leistungsartCode/code/text(), 'pruefung')) then not(exists(*:beschreibung/*:umfangInSWS)) else (not(exists(*:beschreibung/*:umfangInSWS)) or exists(*:beschreibung/*:umfangInSWS))</entry>
                    <entry>Im Feld (‘UmfangInSWS’) sollte kein Wert angegeben werden, wenn der Wert der Codeliste (‘leistungsart’) 'klausur' oder 'pruefung' beträgt. Prüfungen und Klausuren sind punktuelle Ereignisse und finden nicht über das gesamte Semester verteilt statt.</entry>    
                </row>
                <row>
                    <entry>XHS-0021</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:leistungsart/code/code/text(), 'studienfach') or ends-with(*:leistungsart/code/code/text(), 'studiengang')) then (exists(*:unbedenklichkeitsvermerk) or not(exists(*:unbedenklichkeitsvermerk))) else not(exists(*:unbedenklichkeitsvermerk))</entry>
                    <entry>Wenn der Wert der Codeliste ('Leistungsart') 'studienfach' oder 'studiengang' beträgt, dann darf der Unbedenklichkeitsvermerk angegeben werden. </entry>    
                </row>
                <row>
                    <entry>XHS-0022</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:leistungsart/code/code/text(), 'studienfach') or ends-with(*:leistungsart/code/code/text(), 'studiengang')) then (exists(*:angestrebterAbschluss) or not(exists(*:angestrebterAbschluss))) else not(exists(*:angestrebterAbschluss))</entry>
                    <entry>Wenn der Wert der Codeliste ('Leistungsart') 'studienfach' oder 'studiengang' beträgt, dann darf der angestrebte Abschluss angegeben werden. </entry>    
                </row>
                <row>
                    <entry>XHS-0023</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:leistungsart/code/code/text(), 'studienfach') or ends-with(*:leistungsart/code/code/text(), 'studiengang')) then (exists(*:fachsemester) or not(exists(*:fachsemester))) else not(exists(*:fachsemester))</entry>
                    <entry>Wenn der Wert im Codelistenfeld der Codeliste ('Leistungsart') ‘studienfach’ oder ‘studiengang’ ist, dann darf das Fachsemester angegeben werden. </entry>    
                </row>
                <row>
                    <entry>XHS-0024</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:leistungsart/code/code/text(), 'studienfach') or ends-with(*:leistungsart/code/code/text(), 'studiengang')) then (exists(*:schluesselISCED2011) or not(exists(*:schluesselISCED2011))) else not(exists(*:schluesselISCED2011))</entry>
                    <entry>Wenn der Wert der Codeliste ('Leistungsart') ‘studienfach’ oder ‘studiengang’ ist, dann darf der Schlüssel nach ISCED2011 angegeben werden. </entry>    
                </row>
                <row>
                    <entry>XHS-0025</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:leistungsart/code/code/text(), 'studienfach') or ends-with(*:leistungsart/code/code/text(), 'studiengang')) then (exists(*:schluesselISCEDF2013) or not(exists(*:schluesselISCEDF2013))) else not(exists(*:schluesselISCEDF2013))</entry>
                    <entry>Wenn der Wert der Codeliste ('Leistungsart') ‘studienfach’ oder ‘studiengang’ ist, dann darf der Schlüssel nach ISCED2013 angegeben werden. </entry>    
                </row>
                <row>
                    <entry>XHS-0026</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:leistungsart/code/code/text(), 'studienfach') or ends-with(*:leistungsart/code/code/text(), 'studiengang')) then (exists(*:schluesselEQF) or not(exists(*:schluesselEQF))) else not(exists(*:schluesselEQF))</entry>
                    <entry>Wenn der Wert der Codeliste ('Leistungsart') ‘studienfach’ oder ‘studiengang’ ist, dann darf der Schlüssel nach EQF angegeben werden. </entry>    
                </row>
                <row>
                    <entry>XHS-0027</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:benotet/text(),'true') or ends-with(*:benotet/text(),'1')) then (exists(*:leistungsbenotungsstatus)) else (not(exists(*:leistungsbenotungsstatus)))</entry>
                    <entry>Wenn eine Leistung benotet ist, muss das Feld 'benotet' mit dem Wert '1' oder 'true' belegt werden und nur dann darf auch der Leistungsbenotungsstatus angegeben werden.</entry>    
                </row>
                <row>
                    <entry>XHS-0028</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:benotet/text(),'true') or ends-with(*:benotet/text(),'1')) then (exists(*:benotung)) else (not(exists(*:benotung)))</entry>
                    <entry>Wenn eine Leistung benotet ist, muss das Feld 'benotet' mit dem Wert '1' oder 'true' belegt werden und nur dann darf auch der Leistungsbenotungsstatus angegeben werden.</entry>    
                </row>
                <row>
                    <entry>XHS-0029</entry>
                    <entry>Leistung</entry>
                    <entry>((ends-with(*:leistungsart/code/code/text(), 'modul')) and (not(exists(*:beschreibung/*:modulbeschreibungNachKMK)) or exists(*:beschreibung/*:modulbeschreibungNachKMK))) or (not(ends-with(*:leistungsart/code/code/text(), 'modul')) and (not(exists(*:beschreibung/*:modulbeschreibungNachKMK))))</entry>
                    <entry>Wenn der Wert im Codelistenfeld der Codeliste ('Leistungsart') 'modul' ist, dann das Feld 'Beschreibung' nach den Vorgaben der KMK ausgefüllt werden. </entry>    
                </row>
                <row>
                    <entry>XHS-0030</entry>
                    <entry>Leistungsbenotungsstatus</entry>
                    <entry>(exists(*:nichtGelisteterWert) and ends-with(*:code/code/text(), 'wert_nicht_in_liste')) or (not(exists(*:nichtGelisteterWert)) and not(ends-with(*:code/code/text(), 'wert_nicht_in_liste')))</entry>
                    <entry>Das Freitextfeld (nichtGelisteterWert) darf nur dann angezeigt werden, wenn in der Codeliste der Status 'Wert_nicht_in_Liste' gewählt wurde.</entry>    
                </row>
                <row>
                    <entry>XHS-0031</entry>
                    <entry>Leistung</entry>
                    <entry>if(ends-with(*:leistungsart/code/code/text(), 'studienfach') or ends-with(*:leistungsart/code/code/text(), 'studiengang')) then (exists(*:faecherschluesseDESTATIS) or not(exists(*:faecherschluesseDESTATIS))) else not(exists(*:faecherschluesseDESTATIS))</entry>
                    <entry>Wenn der Wert der Codeliste ('Leistungsart') ‘studienfach’ oder ‘studiengang’ ist, dann darf der Fächerschlüssel nach Destatis angegeben werden.</entry>    
                </row>
                <row>
                    <entry>XHS-0032</entry>
                    <entry>rentenbescheinigung</entry>
                    <entry>not(exists(*:rentenversicherungsnummer/gueltigkeit/ende))</entry>
                    <entry>Ein Ablaufdatum darf bei der Rentenversicherungsnummer nicht existieren, da sie ab Geburt bis zum Tode gültig ist.</entry>    
                </row>
            </tbody>
        </tgroup>
    </informaltable>
</appendix>
